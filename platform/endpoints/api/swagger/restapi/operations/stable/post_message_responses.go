// Code generated by go-swagger; DO NOT EDIT.

package stable

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gochat/platform/endpoints/api/swagger/models"
)

// PostMessageCreatedCode is the HTTP code returned for type PostMessageCreated
const PostMessageCreatedCode int = 201

/*PostMessageCreated Message was created.

swagger:response postMessageCreated
*/
type PostMessageCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Message `json:"body,omitempty"`
}

// NewPostMessageCreated creates PostMessageCreated with default headers values
func NewPostMessageCreated() *PostMessageCreated {

	return &PostMessageCreated{}
}

// WithPayload adds the payload to the post message created response
func (o *PostMessageCreated) WithPayload(payload *models.Message) *PostMessageCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post message created response
func (o *PostMessageCreated) SetPayload(payload *models.Message) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMessageCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostMessageBadRequestCode is the HTTP code returned for type PostMessageBadRequest
const PostMessageBadRequestCode int = 400

/*PostMessageBadRequest Bad Request

swagger:response postMessageBadRequest
*/
type PostMessageBadRequest struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewPostMessageBadRequest creates PostMessageBadRequest with default headers values
func NewPostMessageBadRequest() *PostMessageBadRequest {

	return &PostMessageBadRequest{}
}

// WithPayload adds the payload to the post message bad request response
func (o *PostMessageBadRequest) WithPayload(payload interface{}) *PostMessageBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post message bad request response
func (o *PostMessageBadRequest) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMessageBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostMessageUnauthorizedCode is the HTTP code returned for type PostMessageUnauthorized
const PostMessageUnauthorizedCode int = 401

/*PostMessageUnauthorized Unauthorized

swagger:response postMessageUnauthorized
*/
type PostMessageUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewPostMessageUnauthorized creates PostMessageUnauthorized with default headers values
func NewPostMessageUnauthorized() *PostMessageUnauthorized {

	return &PostMessageUnauthorized{}
}

// WithPayload adds the payload to the post message unauthorized response
func (o *PostMessageUnauthorized) WithPayload(payload interface{}) *PostMessageUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post message unauthorized response
func (o *PostMessageUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMessageUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostMessageInternalServerErrorCode is the HTTP code returned for type PostMessageInternalServerError
const PostMessageInternalServerErrorCode int = 500

/*PostMessageInternalServerError Unknown Error

swagger:response postMessageInternalServerError
*/
type PostMessageInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewPostMessageInternalServerError creates PostMessageInternalServerError with default headers values
func NewPostMessageInternalServerError() *PostMessageInternalServerError {

	return &PostMessageInternalServerError{}
}

// WithPayload adds the payload to the post message internal server error response
func (o *PostMessageInternalServerError) WithPayload(payload interface{}) *PostMessageInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post message internal server error response
func (o *PostMessageInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMessageInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
