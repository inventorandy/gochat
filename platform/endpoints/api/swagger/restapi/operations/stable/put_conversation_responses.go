// Code generated by go-swagger; DO NOT EDIT.

package stable

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gochat/platform/endpoints/api/swagger/models"
)

// PutConversationOKCode is the HTTP code returned for type PutConversationOK
const PutConversationOKCode int = 200

/*PutConversationOK Conversation was updated.

swagger:response putConversationOK
*/
type PutConversationOK struct {

	/*
	  In: Body
	*/
	Payload *models.Conversation `json:"body,omitempty"`
}

// NewPutConversationOK creates PutConversationOK with default headers values
func NewPutConversationOK() *PutConversationOK {

	return &PutConversationOK{}
}

// WithPayload adds the payload to the put conversation o k response
func (o *PutConversationOK) WithPayload(payload *models.Conversation) *PutConversationOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put conversation o k response
func (o *PutConversationOK) SetPayload(payload *models.Conversation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutConversationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutConversationBadRequestCode is the HTTP code returned for type PutConversationBadRequest
const PutConversationBadRequestCode int = 400

/*PutConversationBadRequest Bad Request

swagger:response putConversationBadRequest
*/
type PutConversationBadRequest struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewPutConversationBadRequest creates PutConversationBadRequest with default headers values
func NewPutConversationBadRequest() *PutConversationBadRequest {

	return &PutConversationBadRequest{}
}

// WithPayload adds the payload to the put conversation bad request response
func (o *PutConversationBadRequest) WithPayload(payload interface{}) *PutConversationBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put conversation bad request response
func (o *PutConversationBadRequest) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutConversationBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PutConversationUnauthorizedCode is the HTTP code returned for type PutConversationUnauthorized
const PutConversationUnauthorizedCode int = 401

/*PutConversationUnauthorized Unauthorized

swagger:response putConversationUnauthorized
*/
type PutConversationUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewPutConversationUnauthorized creates PutConversationUnauthorized with default headers values
func NewPutConversationUnauthorized() *PutConversationUnauthorized {

	return &PutConversationUnauthorized{}
}

// WithPayload adds the payload to the put conversation unauthorized response
func (o *PutConversationUnauthorized) WithPayload(payload interface{}) *PutConversationUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put conversation unauthorized response
func (o *PutConversationUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutConversationUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PutConversationInternalServerErrorCode is the HTTP code returned for type PutConversationInternalServerError
const PutConversationInternalServerErrorCode int = 500

/*PutConversationInternalServerError Unknown Error

swagger:response putConversationInternalServerError
*/
type PutConversationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewPutConversationInternalServerError creates PutConversationInternalServerError with default headers values
func NewPutConversationInternalServerError() *PutConversationInternalServerError {

	return &PutConversationInternalServerError{}
}

// WithPayload adds the payload to the put conversation internal server error response
func (o *PutConversationInternalServerError) WithPayload(payload interface{}) *PutConversationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put conversation internal server error response
func (o *PutConversationInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutConversationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
