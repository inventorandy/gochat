// Code generated by go-swagger; DO NOT EDIT.

package stable

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gochat/platform/endpoints/api/swagger/models"
)

// GetConversationIDOKCode is the HTTP code returned for type GetConversationIDOK
const GetConversationIDOKCode int = 200

/*GetConversationIDOK Conversation was retrieved.

swagger:response getConversationIdOK
*/
type GetConversationIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Conversation `json:"body,omitempty"`
}

// NewGetConversationIDOK creates GetConversationIDOK with default headers values
func NewGetConversationIDOK() *GetConversationIDOK {

	return &GetConversationIDOK{}
}

// WithPayload adds the payload to the get conversation Id o k response
func (o *GetConversationIDOK) WithPayload(payload *models.Conversation) *GetConversationIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get conversation Id o k response
func (o *GetConversationIDOK) SetPayload(payload *models.Conversation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetConversationIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetConversationIDBadRequestCode is the HTTP code returned for type GetConversationIDBadRequest
const GetConversationIDBadRequestCode int = 400

/*GetConversationIDBadRequest Bad Request

swagger:response getConversationIdBadRequest
*/
type GetConversationIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetConversationIDBadRequest creates GetConversationIDBadRequest with default headers values
func NewGetConversationIDBadRequest() *GetConversationIDBadRequest {

	return &GetConversationIDBadRequest{}
}

// WithPayload adds the payload to the get conversation Id bad request response
func (o *GetConversationIDBadRequest) WithPayload(payload interface{}) *GetConversationIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get conversation Id bad request response
func (o *GetConversationIDBadRequest) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetConversationIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetConversationIDUnauthorizedCode is the HTTP code returned for type GetConversationIDUnauthorized
const GetConversationIDUnauthorizedCode int = 401

/*GetConversationIDUnauthorized Unauthorized

swagger:response getConversationIdUnauthorized
*/
type GetConversationIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetConversationIDUnauthorized creates GetConversationIDUnauthorized with default headers values
func NewGetConversationIDUnauthorized() *GetConversationIDUnauthorized {

	return &GetConversationIDUnauthorized{}
}

// WithPayload adds the payload to the get conversation Id unauthorized response
func (o *GetConversationIDUnauthorized) WithPayload(payload interface{}) *GetConversationIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get conversation Id unauthorized response
func (o *GetConversationIDUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetConversationIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetConversationIDNotFoundCode is the HTTP code returned for type GetConversationIDNotFound
const GetConversationIDNotFoundCode int = 404

/*GetConversationIDNotFound Not Found

swagger:response getConversationIdNotFound
*/
type GetConversationIDNotFound struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetConversationIDNotFound creates GetConversationIDNotFound with default headers values
func NewGetConversationIDNotFound() *GetConversationIDNotFound {

	return &GetConversationIDNotFound{}
}

// WithPayload adds the payload to the get conversation Id not found response
func (o *GetConversationIDNotFound) WithPayload(payload interface{}) *GetConversationIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get conversation Id not found response
func (o *GetConversationIDNotFound) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetConversationIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetConversationIDInternalServerErrorCode is the HTTP code returned for type GetConversationIDInternalServerError
const GetConversationIDInternalServerErrorCode int = 500

/*GetConversationIDInternalServerError Unknown Error

swagger:response getConversationIdInternalServerError
*/
type GetConversationIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetConversationIDInternalServerError creates GetConversationIDInternalServerError with default headers values
func NewGetConversationIDInternalServerError() *GetConversationIDInternalServerError {

	return &GetConversationIDInternalServerError{}
}

// WithPayload adds the payload to the get conversation Id internal server error response
func (o *GetConversationIDInternalServerError) WithPayload(payload interface{}) *GetConversationIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get conversation Id internal server error response
func (o *GetConversationIDInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetConversationIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
